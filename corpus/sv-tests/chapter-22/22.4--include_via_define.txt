============================================
sv-tests/chapter-22/22.4--include_via_define
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: 22.4--include_via_define
:description: Though not well documented, real world code does `defines that cause includes
:tags: 22.4
:type: preprocessing parsing
*/
`define DO_INCLUDE(FN) `include FN

// Check that multiple define references don't throw a multiple `include-on-line error
`DO_INCLUDE("dummy_include.sv") `DO_INCLUDE("dummy_include.sv")

// Check that ifdefs
`ifdef NEVER
 `DO_INCLUDE("SHOULD_NOT_BE_INCLUDED")
`endif

module top ();
endmodule

----

(source_file
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (block_comment)
  (text_macro_definition
    (text_macro_name
      (simple_identifier)
      (list_of_formal_arguments
        (formal_argument
          (simple_identifier))))
    (macro_text))
  (one_line_comment)
  (text_macro_usage
    (simple_identifier)
    (list_of_actual_arguments
      (actual_argument
        (param_expression
          (mintypmax_expression
            (expression
              (primary
                (primary_literal
                  (string_literal
                    (quoted_string
                      (quoted_string_item)))))))))))
  (text_macro_usage
    (simple_identifier)
    (list_of_actual_arguments
      (actual_argument
        (param_expression
          (mintypmax_expression
            (expression
              (primary
                (primary_literal
                  (string_literal
                    (quoted_string
                      (quoted_string_item)))))))))))
  (one_line_comment)
  (conditional_compilation_directive
    (ifdef_condition
      (simple_identifier)))
  (text_macro_usage
    (simple_identifier)
    (list_of_actual_arguments
      (actual_argument
        (param_expression
          (mintypmax_expression
            (expression
              (primary
                (primary_literal
                  (string_literal
                    (quoted_string
                      (quoted_string_item)))))))))))
  (conditional_compilation_directive)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))))
