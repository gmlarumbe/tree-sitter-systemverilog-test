============================================
cva6/pad_functional
============================================

// Copyright 2018 ETH Zurich and University of Bologna.
// Copyright and related rights are licensed under the Solderpad Hardware
// License, Version 0.51 (the "License"); you may not use this file except in
// compliance with the License.  You may obtain a copy of the License at
// http://solderpad.org/licenses/SHL-0.51. Unless required by applicable law
// or agreed to in writing, software, hardware and materials distributed under
// this License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.


module pad_functional_pd (
  input  logic OEN,
  input  logic I,
  output logic O,
  input  logic PEN,
  inout  wire  PAD
);

/*
    X Unknown
    Z Hi-Z
    H Pull High
    L Pull Low
*/

/*
    OEN I   PAD PEN | PAD O
                    |
    0   0   -   0/1 | 0   0
    0   1   -   0/1 | 1   1
    1   0/1 0   0/1 | -   0
    1   0/1 1   0/1 | -   1
    1   0/1 Z   0   | L   L
    1   0/1 Z   1   | -   X

*/

  wire   PAD_wi;

  bufif0 (PAD, I, OEN);
  buf    (O, PAD);
  bufif0 (PAD_wi, 1'b0, PEN);
  rpmos  (PAD, PAD_wi, 1'b0);

endmodule

module pad_functional_pu (
  input  logic OEN,
  input  logic I,
  output logic O,
  input  logic PEN,
  inout  wire  PAD
);

/*
    X Unknown
    Z Hi-Z
    H Pull High
    L Pull Low
*/

/*
    OEN I   PAD PEN | PAD O
                    |
    0   0   -   0/1 | 0   0
    0   1   -   0/1 | 1   1
    1   0/1 0   0/1 | -   0
    1   0/1 1   0/1 | -   1
    1   0/1 Z   0   | H   H
    1   0/1 Z   1   | -   X

*/

  wire   PAD_wi;

  bufif0 (PAD, I, OEN);
  buf    (O, PAD);
  bufif0 (PAD_wi, 1'b1, PEN);
  rpmos  (PAD, PAD_wi, 1'b0);

endmodule
----

(source_file
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_port_declarations
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (net_port_header
            (port_direction)
            (net_port_type
              (net_type)))
          port_name: (simple_identifier))))
    (block_comment)
    (block_comment)
    (net_declaration
      (net_type)
      (list_of_net_decl_assignments
        (net_decl_assignment
          (simple_identifier))))
    (gate_instantiation
      (enable_gatetype)
      (enable_gate_instance
        (output_terminal
          (net_lvalue
            (simple_identifier)))
        (input_terminal
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier)))))
        (enable_terminal
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier)))))))
    (gate_instantiation
      (n_output_gatetype)
      (n_output_gate_instance
        (output_terminal
          (net_lvalue
            (simple_identifier)))
        (input_terminal
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier)))))))
    (gate_instantiation
      (enable_gatetype)
      (enable_gate_instance
        (output_terminal
          (net_lvalue
            (simple_identifier)))
        (input_terminal
          (expression
            (primary
              (primary_literal
                (integral_number
                  (binary_number
                    size: (unsigned_number)
                    base: (binary_base)
                    value: (binary_value)))))))
        (enable_terminal
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier)))))))
    (gate_instantiation
      (mos_switchtype)
      (mos_switch_instance
        (output_terminal
          (net_lvalue
            (simple_identifier)))
        (input_terminal
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier)))))
        (enable_terminal
          (expression
            (primary
              (primary_literal
                (integral_number
                  (binary_number
                    size: (unsigned_number)
                    base: (binary_base)
                    value: (binary_value))))))))))
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_port_declarations
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (net_port_header
            (port_direction)
            (net_port_type
              (net_type)))
          port_name: (simple_identifier))))
    (block_comment)
    (block_comment)
    (net_declaration
      (net_type)
      (list_of_net_decl_assignments
        (net_decl_assignment
          (simple_identifier))))
    (gate_instantiation
      (enable_gatetype)
      (enable_gate_instance
        (output_terminal
          (net_lvalue
            (simple_identifier)))
        (input_terminal
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier)))))
        (enable_terminal
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier)))))))
    (gate_instantiation
      (n_output_gatetype)
      (n_output_gate_instance
        (output_terminal
          (net_lvalue
            (simple_identifier)))
        (input_terminal
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier)))))))
    (gate_instantiation
      (enable_gatetype)
      (enable_gate_instance
        (output_terminal
          (net_lvalue
            (simple_identifier)))
        (input_terminal
          (expression
            (primary
              (primary_literal
                (integral_number
                  (binary_number
                    size: (unsigned_number)
                    base: (binary_base)
                    value: (binary_value)))))))
        (enable_terminal
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier)))))))
    (gate_instantiation
      (mos_switchtype)
      (mos_switch_instance
        (output_terminal
          (net_lvalue
            (simple_identifier)))
        (input_terminal
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier)))))
        (enable_terminal
          (expression
            (primary
              (primary_literal
                (integral_number
                  (binary_number
                    size: (unsigned_number)
                    base: (binary_base)
                    value: (binary_value)))))))))))
