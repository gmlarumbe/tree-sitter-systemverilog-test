============================================
basejump_stl/bsg_clk_gen/bsg_clk_gen
============================================

// This is the toplevel module for the clock generator. The clock generator
// internally contains a bsg_tag node, a ring oscillator, and a clock
// downsampler as well as a external clock pass through. The ring oscillator
// also has its own bsg_tag node.

// To select between
// the ring oscillator, the downsampled ring oscillator and the external
// pass-through clock use the 2-bit select_i signal.
//
// Here are the two bsg_tag payloads for this module:
//
// 1. downsampler
//
// n..1: <n-bit downsampler value>
// 0..0: <1-bit posedge reset value>
//
// all 0's is the fastest setting, and sampling increases as the counter is incremented
//
// 2. oscillator
//
// 4+n .. 4: ADG ctrl - control speed of n ADG stages
//   3 .. 2: CDT ctrl - control speed of CDT stage
//   1 .. 0: FDT ctrl - control speed of FDT stage
//
// all 0's is the slowest setting, and delay decreases as you increment the counter
//
// 3. oscillator trigger (VERSION 2 only)
//  0: =1 allow oscillator control value into configuration registers of oscillator
//     =0 block oscillator control value into configuration registers of oscillators
//
// PREFERRED BOOTUP SEQUENCE (assuming the bypass external clock is not used)
//
// 1. reset the bsg_tag_master
//
//    a. reset the bsg_tag_master
//        - send a 1 on bsg_tag and then a stream of 0's to reset the bsg_tag_master
//        - check bsg_tag.svh for a macro that says how many 0's to send
//
//
// 2. foreach bsg_clk_gen
//    a. program the oscillator
//
//      1. (version 1) reset the oscillator's bsg_tag_client
//           - send a reset packet (data_not_reset) to the oscillator's bsg_tag_client using bsg_tag
//      1. (version 2) send a trigger packet with value 0 to the oscillator trigger's client bsg_tag
//      2. reset the oscillator's internal registers
//           - assert the async_osc_reset_i to force the oscillator's internal registers to its lowest frequency setting
//           - deassert the async_osc_reset_i, which will cause the oscillator to start oscillating
//      3. program the oscillator using bsg_tag
//           - send a data_not_reset packet with clock value to the oscillator client via bsg_tag
//           - (version 2) send a trigger packet with value 1 to the oscillator trigger client via bsg_tag
//           - (version 2) send a trigger packet with value 0 to the oscillator trigger client via bsg_tag
//    b. program the downsampler (should be done after step 2)
//
//      1. reset the downsampler's bsg_tag_client
//         - send a reset packet (data_not_reset) to the downsampler's bsg_tag_client using bsg_tag
//      2. reset and deactiveate the downsampler
//         - send a packet to the downsampler's bsg_tag_client with low bit set to 1
//      3. optionally, activate the downsampler
//         - send a packet to program the downsampler with a new value and set low bit to 0, ending reset
//
// 3. make use of the stable clocks
//
// DEADBUG MODE
//
// 1. Apply voltage to all voltage domains (I/O, Core, and possibly Clock)
//    - (Oscillator probably will be oscillating at a random frequency
// 2. Apply brief voltage to async_osc_reset_i
//    - (Oscillator will now be oscillating at lowest frequency
// 3. Should be able to probe pin to see something (maybe very noisy because not 50 ohm terminated)
//

`include "bsg_defines.sv"

`include "bsg_clk_gen.svh"

module bsg_clk_gen
  import bsg_tag_pkg::bsg_tag_s;
 #(parameter `BSG_INV_PARAM(downsample_width_p )
  ,          num_adgs_p         = 2
  ,          version_p          = 1  // alternative, use version_p = 2
  )
  (input  bsg_tag_s         bsg_osc_tag_i
  ,input  bsg_tag_s         bsg_osc_trigger_tag_i // used only by version_p = 2
  ,input  bsg_tag_s         bsg_ds_tag_i
  ,input                    async_osc_reset_i

  ,input                    ext_clk_i
  ,input  [1:0]             select_i
  ,output logic             clk_o
  );

   localparam debug_level_lp = 0;

   logic osc_clk_out;                // oscillator output clock
   logic ds_clk_out;                 // downsampled output clock

  // Clock Generator (CG) Instance
  //

// if statement is nice but messes up naming in bsg_clk_gen_timing.tcl .. fix later
// maybe by adding unused input to bsg_clk_gen_osc
/*
  if (version_p == 1)
    begin: v1
       bsg_clk_gen_osc #(.num_adgs_p(num_adgs_p))  clk_gen_osc_inst
         (
          .bsg_tag_i          (bsg_osc_tag_i    )
          ,.async_reset_i     (async_osc_reset_i)
          ,.clk_o             (osc_clk_out      )
          );
    end
  else
    begin: v2
 */
       bsg_clk_gen_osc #(.num_adgs_p(num_adgs_p))  clk_gen_osc_inst
         (
          .bsg_tag_i          (bsg_osc_tag_i        )
          ,.bsg_tag_trigger_i  (bsg_osc_trigger_tag_i)
          ,.async_reset_i     (async_osc_reset_i    )
          ,.clk_o             (osc_clk_out          )
          );
/*    end */

   `declare_bsg_clk_gen_ds_tag_payload_s(downsample_width_p)

   bsg_clk_gen_ds_tag_payload_s ds_tag_payload_r;

   wire  ds_tag_payload_new_r;

   // fixme: maybe wire up a default and deal with reset issue?
   // downsampler bsg_tag interface
   bsg_tag_client #(.width_p($bits(bsg_clk_gen_ds_tag_payload_s))
                    ,.harden_p(1)
                    ) btc_ds
     (.bsg_tag_i(bsg_ds_tag_i)

      ,.recv_clk_i   (osc_clk_out)
      ,.recv_new_r_o (ds_tag_payload_new_r)     // we don't require notification
      ,.recv_data_r_o(ds_tag_payload_r)
      );

   if (debug_level_lp > 1)
   always @(negedge osc_clk_out)
     if (ds_tag_payload_new_r)
       $display("## bsg_clk_gen downsampler received configuration state: %b",ds_tag_payload_r);

  // clock downsampler
  //
  // we allow the clock downsample reset to be accessed via bsg_tag; this way
  // we can turn it off by holding reset high to save power.
  //

  bsg_counter_clock_downsample #(.width_p(downsample_width_p),. harden_p(1)) clk_gen_ds_inst
    (.clk_i(osc_clk_out)
    ,.reset_i(ds_tag_payload_r.reset)
    ,.val_i  (ds_tag_payload_r.val  )
    ,.clk_r_o(ds_clk_out      )
    );

  // edge balanced mux for selecting the clocks

  bsg_mux #(.width_p(1)
            ,.els_p(4)
            ,.balanced_p(1)
            ,.harden_p(1)
            ) mux_inst

    // mux pins are A B D C
    // probably wise to locate ds_clk_out and osc_clk_out
    // apart from each other
    (.data_i ({  1'b0, ext_clk_i, ds_clk_out, osc_clk_out })
     ,.sel_i (select_i)
     ,.data_o(clk_o)
     );

endmodule

`BSG_ABSTRACT_MODULE(bsg_clk_gen)


----

(source_file
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (include_compiler_directive
    (quoted_string
      (quoted_string_item)))
  (include_compiler_directive
    (quoted_string
      (quoted_string_item)))
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier)
      (package_import_declaration
        (package_import_item
          (simple_identifier)
          (simple_identifier)))
      (parameter_port_list
        (parameter_port_declaration
          (parameter_declaration
            (list_of_param_assignments
              (param_assignment
                (text_macro_usage
                  (simple_identifier)
                  (list_of_actual_arguments
                    (actual_argument
                      (param_expression
                        (mintypmax_expression
                          (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))))))))
              (param_assignment
                (simple_identifier)
                (constant_param_expression
                  (constant_mintypmax_expression
                    (constant_expression
                      (constant_primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number)))))))))
              (param_assignment
                (simple_identifier)
                (constant_param_expression
                  (constant_mintypmax_expression
                    (constant_expression
                      (constant_primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number))))))))))))
        (one_line_comment))
      (list_of_port_declarations
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (simple_identifier))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (simple_identifier))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (simple_identifier))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (net_port_header
            (port_direction))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (net_port_header
            (port_direction))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (net_port_header
            (port_direction)
            (net_port_type
              (data_type_or_implicit
                (implicit_data_type
                  (packed_dimension
                    (constant_range
                      (constant_expression
                        (constant_primary
                          (primary_literal
                            (integral_number
                              (decimal_number
                                (unsigned_number))))))
                      (constant_expression
                        (constant_primary
                          (primary_literal
                            (integral_number
                              (decimal_number
                                (unsigned_number))))))))))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))))
    (local_parameter_declaration
      (list_of_param_assignments
        (param_assignment
          (simple_identifier)
          (constant_param_expression
            (constant_mintypmax_expression
              (constant_expression
                (constant_primary
                  (primary_literal
                    (integral_number
                      (decimal_number
                        (unsigned_number)))))))))))
    (data_declaration
      (data_type_or_implicit
        (data_type
          (integer_vector_type)))
      (list_of_variable_decl_assignments
        (variable_decl_assignment
          name: (simple_identifier))))
    (one_line_comment)
    (data_declaration
      (data_type_or_implicit
        (data_type
          (integer_vector_type)))
      (list_of_variable_decl_assignments
        (variable_decl_assignment
          name: (simple_identifier))))
    (one_line_comment)
    (one_line_comment)
    (one_line_comment)
    (one_line_comment)
    (one_line_comment)
    (block_comment)
    (module_instantiation
      instance_type: (simple_identifier)
      (parameter_value_assignment
        (list_of_parameter_value_assignments
          (named_parameter_assignment
            (simple_identifier)
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier)))))))))
      (hierarchical_instance
        (name_of_instance
          instance_name: (simple_identifier))
        (list_of_port_connections
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))))))
    (block_comment)
    (text_macro_usage
      (simple_identifier)
      (list_of_actual_arguments
        (actual_argument
          (param_expression
            (mintypmax_expression
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier)))))))))
    (net_declaration
      (simple_identifier)
      (list_of_net_decl_assignments
        (net_decl_assignment
          (simple_identifier))))
    (net_declaration
      (net_type)
      (list_of_net_decl_assignments
        (net_decl_assignment
          (simple_identifier))))
    (one_line_comment)
    (one_line_comment)
    (module_instantiation
      instance_type: (simple_identifier)
      (parameter_value_assignment
        (list_of_parameter_value_assignments
          (named_parameter_assignment
            (simple_identifier)
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (function_subroutine_call
                      (subroutine_call
                        (system_tf_call
                          (system_tf_identifier)
                          (list_of_arguments
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier)))))))))))))
          (named_parameter_assignment
            (simple_identifier)
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number)))))))))))
      (hierarchical_instance
        (name_of_instance
          instance_name: (simple_identifier))
        (list_of_port_connections
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (one_line_comment)
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))))))
    (conditional_generate_construct
      (if_generate_construct
        (constant_expression
          left: (constant_expression
            (constant_primary
              (simple_identifier)))
          right: (constant_expression
            (constant_primary
              (primary_literal
                (integral_number
                  (decimal_number
                    (unsigned_number)))))))
        (generate_block
          (always_construct
            (always_keyword)
            (statement
              (statement_item
                (procedural_timing_control_statement
                  (event_control
                    (clocking_event
                      (event_expression
                        (edge_identifier)
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier)))))))
                  (statement_or_null
                    (statement
                      (statement_item
                        (conditional_statement
                          (cond_predicate
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier)))))
                          (statement_or_null
                            (statement
                              (statement_item
                                (subroutine_call_statement
                                  (subroutine_call
                                    (system_tf_call
                                      (system_tf_identifier)
                                      (list_of_arguments
                                        (expression
                                          (primary
                                            (primary_literal
                                              (string_literal
                                                (quoted_string
                                                  (quoted_string_item))))))
                                        (expression
                                          (primary
                                            (hierarchical_identifier
                                              (simple_identifier))))))))))))))))))))))
    (one_line_comment)
    (one_line_comment)
    (one_line_comment)
    (one_line_comment)
    (one_line_comment)
    (module_instantiation
      instance_type: (simple_identifier)
      (parameter_value_assignment
        (list_of_parameter_value_assignments
          (named_parameter_assignment
            (simple_identifier)
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier)))))))
          (named_parameter_assignment
            (simple_identifier)
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number)))))))))))
      (hierarchical_instance
        (name_of_instance
          instance_name: (simple_identifier))
        (list_of_port_connections
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)
                  (simple_identifier)))))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)
                  (simple_identifier)))))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))))))
    (one_line_comment)
    (module_instantiation
      instance_type: (simple_identifier)
      (parameter_value_assignment
        (list_of_parameter_value_assignments
          (named_parameter_assignment
            (simple_identifier)
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number)))))))))
          (named_parameter_assignment
            (simple_identifier)
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number)))))))))
          (named_parameter_assignment
            (simple_identifier)
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number)))))))))
          (named_parameter_assignment
            (simple_identifier)
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number)))))))))))
      (hierarchical_instance
        (name_of_instance
          instance_name: (simple_identifier))
        (one_line_comment)
        (one_line_comment)
        (one_line_comment)
        (list_of_port_connections
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (concatenation
                  (expression
                    (primary
                      (primary_literal
                        (integral_number
                          (binary_number
                            size: (unsigned_number)
                            base: (binary_base)
                            value: (binary_value))))))
                  (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier))))
                  (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier))))
                  (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier))))))))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))))))
  (text_macro_usage
    (simple_identifier)
    (list_of_actual_arguments
      (actual_argument
        (param_expression
          (mintypmax_expression
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))))))))
