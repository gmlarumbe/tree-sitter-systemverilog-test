============================================
cva6/stream_to_mem
============================================

// Copyright 2020 ETH Zurich and University of Bologna.
// Copyright and related rights are licensed under the Solderpad Hardware
// License, Version 0.51 (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of the License at
// http://solderpad.org/licenses/SHL-0.51. Unless required by applicable law
// or agreed to in writing, software, hardware and materials distributed under
// this License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

// Authors:
// - Andreas Kurth <akurth@iis.ee.ethz.ch>

/// `stream_to_mem`: Allows to use memories with flow control (`valid`/`ready`) for requests but without flow
/// control for output data to be used in streams.
`include "common_cells/registers.svh"
module stream_to_mem #(
  /// Memory request payload type, usually write enable, write data, etc.
  parameter type         mem_req_t  = logic,
  /// Memory response payload type, usually read data
  parameter type         mem_resp_t = logic,
  /// Number of buffered responses (fall-through, thus no additional latency).  This defines the
  /// maximum number of outstanding requests on the memory interface. If the attached memory
  /// responds in the same cycle a request is applied, this MUST be 0. If the attached memory
  /// responds at least one cycle after a request, this MUST be >= 1 and should be equal to the
  /// response latency of the memory to saturate bandwidth.
  parameter int unsigned BufDepth   = 32'd1
) (
  /// Clock
  input  logic      clk_i,
  /// Asynchronous reset, active low
  input  logic      rst_ni,
  /// Request stream interface, payload
  input  mem_req_t  req_i,
  /// Request stream interface, payload is valid for transfer
  input  logic      req_valid_i,
  /// Request stream interface, payload can be accepted
  output logic      req_ready_o,
  /// Response stream interface, payload
  output mem_resp_t resp_o,
  /// Response stream interface, payload is valid for transfer
  output logic      resp_valid_o,
  /// Response stream interface, payload can be accepted
  input  logic      resp_ready_i,
  /// Memory request interface, payload
  output mem_req_t  mem_req_o,
  /// Memory request interface, payload is valid for transfer
  output logic      mem_req_valid_o,
  /// Memory request interface, payload can be accepted
  input  logic      mem_req_ready_i,
  /// Memory response interface, payload
  input  mem_resp_t mem_resp_i,
  /// Memory response interface, payload is valid
  input  logic      mem_resp_valid_i
);

  typedef logic [$clog2(BufDepth+1):0] cnt_t;

  cnt_t cnt_d, cnt_q;
  logic buf_ready,
        req_ready;

  if (BufDepth > 0) begin : gen_buf
    // Count number of outstanding requests.
    always_comb begin
      cnt_d = cnt_q;
      if (req_valid_i && req_ready_o) begin
        cnt_d++;
      end
      if (resp_valid_o && resp_ready_i) begin
        cnt_d--;
      end
    end

    // Can issue another request if the counter is not at its limit or a response is delivered in
    // the current cycle.
    assign req_ready = (cnt_q < BufDepth) | (resp_valid_o & resp_ready_i);

    // Control request and memory request interface handshakes.
    assign req_ready_o = mem_req_ready_i & req_ready;
    assign mem_req_valid_o = req_valid_i & req_ready;

    // Buffer responses.
    stream_fifo #(
      .FALL_THROUGH ( 1'b1       ),
      .DEPTH        ( BufDepth   ),
      .T            ( mem_resp_t )
    ) i_resp_buf (
      .clk_i,
      .rst_ni,
      .flush_i    ( 1'b0             ),
      .testmode_i ( 1'b0             ),
      .data_i     ( mem_resp_i       ),
      .valid_i    ( mem_resp_valid_i ),
      .ready_o    ( buf_ready        ),
      .data_o     ( resp_o           ),
      .valid_o    ( resp_valid_o     ),
      .ready_i    ( resp_ready_i     ),
      .usage_o    ( /* unused */     )
    );

    // Register
    `FFARN(cnt_q, cnt_d, '0, clk_i, rst_ni)

  end else begin : gen_no_buf
    // Control request, memory request, and response interface handshakes.
    assign mem_req_valid_o = req_valid_i;
    assign resp_valid_o    = mem_req_valid_o & mem_req_ready_i & mem_resp_valid_i;
    assign req_ready_o     = resp_ready_i    & resp_valid_o;

    // Forward responses.
    assign resp_o = mem_resp_i;
  end

  // Forward requests.
  assign mem_req_o = req_i;

// Assertions
// pragma translate_off
`ifndef VERILATOR
  if (BufDepth > 0) begin : gen_buf_asserts
    assert property (@(posedge clk_i) mem_resp_valid_i |-> buf_ready)
      else $error("Memory response lost!");
    assert property (@(posedge clk_i) cnt_q == '0 |=> cnt_q != '1)
      else $error("Counter underflowed!");
    assert property (@(posedge clk_i) cnt_q == BufDepth |=> cnt_q != BufDepth + 1)
      else $error("Counter overflowed!");
  end else begin : gen_no_buf_asserts
    assume property (@(posedge clk_i) mem_req_valid_o & mem_req_ready_i |-> mem_resp_valid_i)
      else $error("Without BufDepth = 0, the memory must respond in the same cycle!");
  end
`endif
// pragma translate_on
endmodule

----

(source_file
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (include_compiler_directive
    (quoted_string
      (quoted_string_item)))
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier)
      (parameter_port_list
        (one_line_comment)
        (parameter_port_declaration
          (parameter_declaration
            (type_parameter_declaration
              (list_of_type_assignments
                (type_assignment
                  name: (simple_identifier)
                  value: (data_type
                    (integer_vector_type)))))))
        (one_line_comment)
        (parameter_port_declaration
          (parameter_declaration
            (type_parameter_declaration
              (list_of_type_assignments
                (type_assignment
                  name: (simple_identifier)
                  value: (data_type
                    (integer_vector_type)))))))
        (one_line_comment)
        (one_line_comment)
        (one_line_comment)
        (one_line_comment)
        (one_line_comment)
        (parameter_port_declaration
          (parameter_declaration
            (data_type_or_implicit
              (data_type
                (integer_atom_type)))
            (list_of_param_assignments
              (param_assignment
                (simple_identifier)
                (constant_param_expression
                  (constant_mintypmax_expression
                    (constant_expression
                      (constant_primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              size: (unsigned_number)
                              base: (decimal_base)
                              value: (unsigned_number)))))))))))))
      (list_of_port_declarations
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (simple_identifier))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (simple_identifier))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (simple_identifier))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (simple_identifier))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))))
    (data_declaration
      (type_declaration
        (data_type
          (integer_vector_type)
          (packed_dimension
            (constant_range
              (constant_expression
                (constant_primary
                  (constant_function_call
                    (function_subroutine_call
                      (subroutine_call
                        (system_tf_call
                          (system_tf_identifier)
                          (list_of_arguments
                            (expression
                              left: (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier))))
                              right: (expression
                                (primary
                                  (primary_literal
                                    (integral_number
                                      (decimal_number
                                        (unsigned_number))))))))))))))
              (constant_expression
                (constant_primary
                  (primary_literal
                    (integral_number
                      (decimal_number
                        (unsigned_number)))))))))
        type_name: (simple_identifier)))
    (net_declaration
      (simple_identifier)
      (list_of_net_decl_assignments
        (net_decl_assignment
          (simple_identifier))
        (net_decl_assignment
          (simple_identifier))))
    (data_declaration
      (data_type_or_implicit
        (data_type
          (integer_vector_type)))
      (list_of_variable_decl_assignments
        (variable_decl_assignment
          name: (simple_identifier))
        (variable_decl_assignment
          name: (simple_identifier))))
    (conditional_generate_construct
      (if_generate_construct
        (constant_expression
          left: (constant_expression
            (constant_primary
              (simple_identifier)))
          right: (constant_expression
            (constant_primary
              (primary_literal
                (integral_number
                  (decimal_number
                    (unsigned_number)))))))
        (generate_block
          name: (simple_identifier)
          (one_line_comment)
          (always_construct
            (always_keyword)
            (statement
              (statement_item
                (seq_block
                  (statement_or_null
                    (statement
                      (statement_item
                        (blocking_assignment
                          (operator_assignment
                            (variable_lvalue
                              (hierarchical_identifier
                                (simple_identifier)))
                            (assignment_operator)
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier)))))))))
                  (statement_or_null
                    (statement
                      (statement_item
                        (conditional_statement
                          (cond_predicate
                            (expression
                              left: (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier))))
                              right: (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier))))))
                          (statement_or_null
                            (statement
                              (statement_item
                                (seq_block
                                  (statement_or_null
                                    (statement
                                      (statement_item
                                        (blocking_assignment
                                          (inc_or_dec_expression
                                            (variable_lvalue
                                              (hierarchical_identifier
                                                (simple_identifier)))
                                            (inc_or_dec_operator))))))))))))))
                  (statement_or_null
                    (statement
                      (statement_item
                        (conditional_statement
                          (cond_predicate
                            (expression
                              left: (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier))))
                              right: (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier))))))
                          (statement_or_null
                            (statement
                              (statement_item
                                (seq_block
                                  (statement_or_null
                                    (statement
                                      (statement_item
                                        (blocking_assignment
                                          (inc_or_dec_expression
                                            (variable_lvalue
                                              (hierarchical_identifier
                                                (simple_identifier)))
                                            (inc_or_dec_operator))))))))))))))))))
          (one_line_comment)
          (one_line_comment)
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (simple_identifier))
                (expression
                  left: (expression
                    (primary
                      (mintypmax_expression
                        (expression
                          left: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          right: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))))))
                  right: (expression
                    (primary
                      (mintypmax_expression
                        (expression
                          left: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          right: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))))))))))
          (one_line_comment)
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (simple_identifier))
                (expression
                  left: (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier))))
                  right: (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier))))))))
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (simple_identifier))
                (expression
                  left: (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier))))
                  right: (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier))))))))
          (one_line_comment)
          (module_instantiation
            instance_type: (simple_identifier)
            (parameter_value_assignment
              (list_of_parameter_value_assignments
                (named_parameter_assignment
                  (simple_identifier)
                  (param_expression
                    (mintypmax_expression
                      (expression
                        (primary
                          (primary_literal
                            (integral_number
                              (binary_number
                                size: (unsigned_number)
                                base: (binary_base)
                                value: (binary_value)))))))))
                (named_parameter_assignment
                  (simple_identifier)
                  (param_expression
                    (mintypmax_expression
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))))
                (named_parameter_assignment
                  (simple_identifier)
                  (param_expression
                    (mintypmax_expression
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))))))
            (hierarchical_instance
              (name_of_instance
                instance_name: (simple_identifier))
              (list_of_port_connections
                (named_port_connection
                  port_name: (simple_identifier))
                (named_port_connection
                  port_name: (simple_identifier))
                (named_port_connection
                  port_name: (simple_identifier)
                  connection: (expression
                    (primary
                      (primary_literal
                        (integral_number
                          (binary_number
                            size: (unsigned_number)
                            base: (binary_base)
                            value: (binary_value)))))))
                (named_port_connection
                  port_name: (simple_identifier)
                  connection: (expression
                    (primary
                      (primary_literal
                        (integral_number
                          (binary_number
                            size: (unsigned_number)
                            base: (binary_base)
                            value: (binary_value)))))))
                (named_port_connection
                  port_name: (simple_identifier)
                  connection: (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier)))))
                (named_port_connection
                  port_name: (simple_identifier)
                  connection: (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier)))))
                (named_port_connection
                  port_name: (simple_identifier)
                  connection: (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier)))))
                (named_port_connection
                  port_name: (simple_identifier)
                  connection: (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier)))))
                (named_port_connection
                  port_name: (simple_identifier)
                  connection: (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier)))))
                (named_port_connection
                  port_name: (simple_identifier)
                  connection: (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier)))))
                (named_port_connection
                  port_name: (simple_identifier)
                  (block_comment)))))
          (one_line_comment)
          (text_macro_usage
            (simple_identifier)
            (list_of_actual_arguments
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (primary_literal
                          (unbased_unsized_literal)))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))))))))
        (generate_block
          name: (simple_identifier)
          (one_line_comment)
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (simple_identifier))
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier)))))))
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (simple_identifier))
                (expression
                  left: (expression
                    left: (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))
                    right: (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))
                  right: (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier))))))))
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (simple_identifier))
                (expression
                  left: (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier))))
                  right: (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier))))))))
          (one_line_comment)
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (simple_identifier))
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))))))))))
    (one_line_comment)
    (continuous_assign
      (list_of_net_assignments
        (net_assignment
          (net_lvalue
            (simple_identifier))
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier)))))))
    (one_line_comment)
    (one_line_comment)
    (conditional_compilation_directive
      (ifdef_condition
        (simple_identifier)))
    (conditional_generate_construct
      (if_generate_construct
        (constant_expression
          left: (constant_expression
            (constant_primary
              (simple_identifier)))
          right: (constant_expression
            (constant_primary
              (primary_literal
                (integral_number
                  (decimal_number
                    (unsigned_number)))))))
        (generate_block
          name: (simple_identifier)
          (concurrent_assertion_item
            (assert_property_statement
              (property_spec
                (clocking_event
                  (event_expression
                    (edge_identifier)
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))))
                (property_expr
                  (sequence_expr
                    (expression_or_dist
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier))))))
                  (property_expr
                    (sequence_expr
                      (expression_or_dist
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier)))))))))
              (action_block
                (statement_or_null
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (severity_system_task
                          (list_of_arguments
                            (expression
                              (primary
                                (primary_literal
                                  (string_literal
                                    (quoted_string
                                      (quoted_string_item)))))))))))))))
          (concurrent_assertion_item
            (assert_property_statement
              (property_spec
                (clocking_event
                  (event_expression
                    (edge_identifier)
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))))
                (property_expr
                  (sequence_expr
                    (expression_or_dist
                      (expression
                        left: (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))
                        right: (expression
                          (primary
                            (primary_literal
                              (unbased_unsized_literal)))))))
                  (property_expr
                    (sequence_expr
                      (expression_or_dist
                        (expression
                          left: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          right: (expression
                            (primary
                              (primary_literal
                                (unbased_unsized_literal))))))))))
              (action_block
                (statement_or_null
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (severity_system_task
                          (list_of_arguments
                            (expression
                              (primary
                                (primary_literal
                                  (string_literal
                                    (quoted_string
                                      (quoted_string_item)))))))))))))))
          (concurrent_assertion_item
            (assert_property_statement
              (property_spec
                (clocking_event
                  (event_expression
                    (edge_identifier)
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))))
                (property_expr
                  (sequence_expr
                    (expression_or_dist
                      (expression
                        left: (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))
                        right: (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier)))))))
                  (property_expr
                    (sequence_expr
                      (expression_or_dist
                        (expression
                          left: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          right: (expression
                            left: (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))
                            right: (expression
                              (primary
                                (primary_literal
                                  (integral_number
                                    (decimal_number
                                      (unsigned_number)))))))))))))
              (action_block
                (statement_or_null
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (severity_system_task
                          (list_of_arguments
                            (expression
                              (primary
                                (primary_literal
                                  (string_literal
                                    (quoted_string
                                      (quoted_string_item))))))))))))))))
        (generate_block
          name: (simple_identifier)
          (concurrent_assertion_item
            (assume_property_statement
              (property_spec
                (clocking_event
                  (event_expression
                    (edge_identifier)
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))))
                (property_expr
                  (sequence_expr
                    (expression_or_dist
                      (expression
                        left: (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))
                        right: (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier)))))))
                  (property_expr
                    (sequence_expr
                      (expression_or_dist
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier)))))))))
              (action_block
                (statement_or_null
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (severity_system_task
                          (list_of_arguments
                            (expression
                              (primary
                                (primary_literal
                                  (string_literal
                                    (quoted_string
                                      (quoted_string_item))))))))))))))))))
    (conditional_compilation_directive)
    (one_line_comment)))
