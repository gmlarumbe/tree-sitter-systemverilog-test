============================================
cva6/csr_buffer
============================================

// Copyright 2018 ETH Zurich and University of Bologna.
// Copyright and related rights are licensed under the Solderpad Hardware
// License, Version 0.51 (the "License"); you may not use this file except in
// compliance with the License.  You may obtain a copy of the License at
// http://solderpad.org/licenses/SHL-0.51. Unless required by applicable law
// or agreed to in writing, software, hardware and materials distributed under
// this License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//
// Author: Florian Zaruba, ETH Zurich
// Date: 05.05.2017
// Description: Buffer to hold CSR address, this acts like a functional unit
//              to the scoreboard.


module csr_buffer
  import ariane_pkg::*;
#(
    parameter config_pkg::cva6_cfg_t CVA6Cfg = config_pkg::cva6_cfg_empty,
    parameter type fu_data_t = logic
) (
    // Subsystem Clock - SUBSYSTEM
    input logic clk_i,
    // Asynchronous reset active low - SUBSYSTEM
    input logic rst_ni,
    // Flush CSR - CONTROLLER
    input logic flush_i,
    // FU data needed to execute instruction - ISSUE_STAGE
    input fu_data_t fu_data_i,
    // CSR FU is ready - ISSUE_STAGE
    output logic csr_ready_o,
    // CSR instruction is valid - ISSUE_STAGE
    input logic csr_valid_i,
    // CSR buffer result - ISSUE_STAGE
    output logic [CVA6Cfg.XLEN-1:0] csr_result_o,
    // commit the pending CSR OP - TO_BE_COMPLETED
    input logic csr_commit_i,
    // CSR address to write - COMMIT_STAGE
    output logic [11:0] csr_addr_o
);
  // this is a single entry store buffer for the address of the CSR
  // which we are going to need in the commit stage
  struct packed {
    logic [11:0] csr_address;
    logic        valid;
  }
      csr_reg_n, csr_reg_q;

  // control logic, scoreboard signals
  assign csr_result_o = fu_data_i.operand_a;
  assign csr_addr_o   = csr_reg_q.csr_address;

  // write logic
  always_comb begin : write
    csr_reg_n   = csr_reg_q;
    // by default we are ready
    csr_ready_o = 1'b1;
    // if we have a valid uncomiited csr req or are just getting one WITHOUT a commit in, we are not ready
    if ((csr_reg_q.valid || csr_valid_i) && ~csr_commit_i) csr_ready_o = 1'b0;
    // if we got a valid from the scoreboard
    // store the CSR address
    if (csr_valid_i) begin
      csr_reg_n.csr_address = fu_data_i.operand_b[11:0];
      csr_reg_n.valid       = 1'b1;
    end
    // if we get a commit and no new valid instruction -> clear the valid bit
    if (csr_commit_i && ~csr_valid_i) begin
      csr_reg_n.valid = 1'b0;
    end
    // clear the buffer if we flushed
    if (flush_i) csr_reg_n.valid = 1'b0;
  end
  // sequential process
  always_ff @(posedge clk_i or negedge rst_ni) begin
    if (~rst_ni) begin
      csr_reg_q <= '{default: 0};
    end else begin
      csr_reg_q <= csr_reg_n;
    end
  end

endmodule

----

(source_file
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier)
      (package_import_declaration
        (package_import_item
          (simple_identifier)))
      (parameter_port_list
        (parameter_port_declaration
          (parameter_declaration
            (data_type_or_implicit
              (data_type
                (class_type
                  (simple_identifier)
                  (simple_identifier))))
            (list_of_param_assignments
              (param_assignment
                (simple_identifier)
                (constant_param_expression
                  (constant_mintypmax_expression
                    (constant_expression
                      (constant_primary
                        (constant_function_call
                          (function_subroutine_call
                            (subroutine_call
                              (method_call
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier)))
                                (method_call_body
                                  name: (simple_identifier))))))))))))))
        (parameter_port_declaration
          (parameter_declaration
            (type_parameter_declaration
              (list_of_type_assignments
                (type_assignment
                  name: (simple_identifier)
                  value: (data_type
                    (integer_vector_type))))))))
      (list_of_port_declarations
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (simple_identifier))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type)
                (packed_dimension
                  (constant_range
                    (constant_expression
                      left: (constant_expression
                        (constant_primary
                          (simple_identifier)
                          (constant_select
                            (simple_identifier))))
                      right: (constant_expression
                        (constant_primary
                          (primary_literal
                            (integral_number
                              (decimal_number
                                (unsigned_number)))))))
                    (constant_expression
                      (constant_primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number)))))))))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type)
                (packed_dimension
                  (constant_range
                    (constant_expression
                      (constant_primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number))))))
                    (constant_expression
                      (constant_primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number)))))))))))
          port_name: (simple_identifier))))
    (one_line_comment)
    (one_line_comment)
    (data_declaration
      (data_type_or_implicit
        (data_type
          (struct_union)
          (struct_union_member
            (data_type_or_void
              (data_type
                (integer_vector_type)
                (packed_dimension
                  (constant_range
                    (constant_expression
                      (constant_primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number))))))
                    (constant_expression
                      (constant_primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number))))))))))
            (list_of_variable_decl_assignments
              (variable_decl_assignment
                name: (simple_identifier))))
          (struct_union_member
            (data_type_or_void
              (data_type
                (integer_vector_type)))
            (list_of_variable_decl_assignments
              (variable_decl_assignment
                name: (simple_identifier))))))
      (list_of_variable_decl_assignments
        (variable_decl_assignment
          name: (simple_identifier))
        (variable_decl_assignment
          name: (simple_identifier))))
    (one_line_comment)
    (continuous_assign
      (list_of_net_assignments
        (net_assignment
          (net_lvalue
            (simple_identifier))
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier)
                (simple_identifier)))))))
    (continuous_assign
      (list_of_net_assignments
        (net_assignment
          (net_lvalue
            (simple_identifier))
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier)
                (simple_identifier)))))))
    (one_line_comment)
    (always_construct
      (always_keyword)
      (statement
        (statement_item
          (seq_block
            (simple_identifier)
            (statement_or_null
              (statement
                (statement_item
                  (blocking_assignment
                    (operator_assignment
                      (variable_lvalue
                        (hierarchical_identifier
                          (simple_identifier)))
                      (assignment_operator)
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))))))
            (one_line_comment)
            (statement_or_null
              (statement
                (statement_item
                  (blocking_assignment
                    (operator_assignment
                      (variable_lvalue
                        (hierarchical_identifier
                          (simple_identifier)))
                      (assignment_operator)
                      (expression
                        (primary
                          (primary_literal
                            (integral_number
                              (binary_number
                                size: (unsigned_number)
                                base: (binary_base)
                                value: (binary_value)))))))))))
            (one_line_comment)
            (statement_or_null
              (statement
                (statement_item
                  (conditional_statement
                    (cond_predicate
                      (expression
                        left: (expression
                          (primary
                            (mintypmax_expression
                              (expression
                                left: (expression
                                  (primary
                                    (function_subroutine_call
                                      (subroutine_call
                                        (method_call
                                          (primary
                                            (hierarchical_identifier
                                              (simple_identifier)))
                                          (method_call_body
                                            name: (simple_identifier)))))))
                                right: (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))))))))
                        right: (expression
                          operator: (unary_operator)
                          argument: (primary
                            (hierarchical_identifier
                              (simple_identifier))))))
                    (statement_or_null
                      (statement
                        (statement_item
                          (blocking_assignment
                            (operator_assignment
                              (variable_lvalue
                                (hierarchical_identifier
                                  (simple_identifier)))
                              (assignment_operator)
                              (expression
                                (primary
                                  (primary_literal
                                    (integral_number
                                      (binary_number
                                        size: (unsigned_number)
                                        base: (binary_base)
                                        value: (binary_value)))))))))))))))
            (one_line_comment)
            (one_line_comment)
            (statement_or_null
              (statement
                (statement_item
                  (conditional_statement
                    (cond_predicate
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))
                    (statement_or_null
                      (statement
                        (statement_item
                          (seq_block
                            (statement_or_null
                              (statement
                                (statement_item
                                  (blocking_assignment
                                    (operator_assignment
                                      (variable_lvalue
                                        (hierarchical_identifier
                                          (simple_identifier)
                                          (simple_identifier)))
                                      (assignment_operator)
                                      (expression
                                        (primary
                                          (hierarchical_identifier
                                            (simple_identifier)
                                            (simple_identifier))
                                          (select
                                            (constant_range
                                              (constant_expression
                                                (constant_primary
                                                  (primary_literal
                                                    (integral_number
                                                      (decimal_number
                                                        (unsigned_number))))))
                                              (constant_expression
                                                (constant_primary
                                                  (primary_literal
                                                    (integral_number
                                                      (decimal_number
                                                        (unsigned_number)))))))))))))))
                            (statement_or_null
                              (statement
                                (statement_item
                                  (blocking_assignment
                                    (operator_assignment
                                      (variable_lvalue
                                        (hierarchical_identifier
                                          (simple_identifier)
                                          (simple_identifier)))
                                      (assignment_operator)
                                      (expression
                                        (primary
                                          (primary_literal
                                            (integral_number
                                              (binary_number
                                                size: (unsigned_number)
                                                base: (binary_base)
                                                value: (binary_value)))))))))))))))))))
            (one_line_comment)
            (statement_or_null
              (statement
                (statement_item
                  (conditional_statement
                    (cond_predicate
                      (expression
                        left: (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))
                        right: (expression
                          operator: (unary_operator)
                          argument: (primary
                            (hierarchical_identifier
                              (simple_identifier))))))
                    (statement_or_null
                      (statement
                        (statement_item
                          (seq_block
                            (statement_or_null
                              (statement
                                (statement_item
                                  (blocking_assignment
                                    (operator_assignment
                                      (variable_lvalue
                                        (hierarchical_identifier
                                          (simple_identifier)
                                          (simple_identifier)))
                                      (assignment_operator)
                                      (expression
                                        (primary
                                          (primary_literal
                                            (integral_number
                                              (binary_number
                                                size: (unsigned_number)
                                                base: (binary_base)
                                                value: (binary_value)))))))))))))))))))
            (one_line_comment)
            (statement_or_null
              (statement
                (statement_item
                  (conditional_statement
                    (cond_predicate
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))
                    (statement_or_null
                      (statement
                        (statement_item
                          (blocking_assignment
                            (operator_assignment
                              (variable_lvalue
                                (hierarchical_identifier
                                  (simple_identifier)
                                  (simple_identifier)))
                              (assignment_operator)
                              (expression
                                (primary
                                  (primary_literal
                                    (integral_number
                                      (binary_number
                                        size: (unsigned_number)
                                        base: (binary_base)
                                        value: (binary_value)))))))))))))))))))
    (one_line_comment)
    (always_construct
      (always_keyword)
      (statement
        (statement_item
          (procedural_timing_control_statement
            (event_control
              (clocking_event
                (event_expression
                  (event_expression
                    (edge_identifier)
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))
                  (event_expression
                    (edge_identifier)
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))))))
            (statement_or_null
              (statement
                (statement_item
                  (seq_block
                    (statement_or_null
                      (statement
                        (statement_item
                          (conditional_statement
                            (cond_predicate
                              (expression
                                operator: (unary_operator)
                                argument: (primary
                                  (hierarchical_identifier
                                    (simple_identifier)))))
                            (statement_or_null
                              (statement
                                (statement_item
                                  (seq_block
                                    (statement_or_null
                                      (statement
                                        (statement_item
                                          (nonblocking_assignment
                                            (variable_lvalue
                                              (hierarchical_identifier
                                                (simple_identifier)))
                                            (expression
                                              (primary
                                                (assignment_pattern_expression
                                                  (assignment_pattern
                                                    (assignment_pattern_key)
                                                    (expression
                                                      (primary
                                                        (primary_literal
                                                          (integral_number
                                                            (decimal_number
                                                              (unsigned_number))))))))))))))))))
                            (statement_or_null
                              (statement
                                (statement_item
                                  (seq_block
                                    (statement_or_null
                                      (statement
                                        (statement_item
                                          (nonblocking_assignment
                                            (variable_lvalue
                                              (hierarchical_identifier
                                                (simple_identifier)))
                                            (expression
                                              (primary
                                                (hierarchical_identifier
                                                  (simple_identifier))))))))))))))))))))))))))
