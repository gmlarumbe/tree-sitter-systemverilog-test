============================================
cva6/isochronous_spill_register
============================================

// Copyright 2020 ETH Zurich and University of Bologna.
//
// Copyright and related rights are licensed under the Solderpad Hardware
// License, Version 0.51 (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of the License at
// http://solderpad.org/licenses/SHL-0.51. Unless required by applicable law
// or agreed to in writing, software, hardware and materials distributed under
// this License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//
// Florian Zaruba <zarubaf@iis.ee.ethz.ch>

`include "common_cells/registers.svh"

/// A register with handshakes that completely cuts any combinatorial paths
/// between the input and output in isochronous clock domains.
///
/// > Definition of isochronous: In telecommunication, an isochronous signal is a signal
/// > in which the time interval separating any two significant instants is equal to the
/// > unit interval or a multiple of the unit interval.
///
/// The source and destination clock domains must be derived from the same clock
/// but can vary in frequency by a constant factor (e.g., double the frequency).
///
/// The module is basically a two deep dual-clock fifo with read and write pointers
/// in different clock domains. As we know the static timing relationship between the
/// clock domains we can rely on static timing analysis (STA) to get the sampling windows
/// right and therefore don't need any synchronization.
///
/// # Restrictions
///
/// Source and destination clock domains must be an integer multiple of each other and
/// all timing-paths need to be covered by STA. For example a recommended SDC would be:
///
/// `create_generated_clock dst_clk_i -name dst_clk  -source src_clk_i -divide_by 2
///
/// There are _no_ restrictions on which clock domain should be the faster, any integer
/// ratio will work.
module isochronous_spill_register #(
  /// Data type of spill register.
  parameter type T      = logic,
  /// Make this spill register transparent.
  parameter bit  Bypass = 1'b0
) (
  /// Clock of source clock domain.
  input  logic src_clk_i,
  /// Active low async reset in source domain.
  input  logic src_rst_ni,
  /// Source input data is valid.
  input  logic src_valid_i,
  /// Source is ready to accept.
  output logic src_ready_o,
  /// Source input data.
  input  T     src_data_i,
  /// Clock of destination clock domain.
  input  logic dst_clk_i,
  /// Active low async reset in destination domain.
  input  logic dst_rst_ni,
  /// Destination output data is valid.
  output logic dst_valid_o,
  /// Destination is ready to accept.
  input  logic dst_ready_i,
  /// Destination output data.
  output T     dst_data_o
);
  // Don't generate the spill register.
  if (Bypass) begin : gen_bypass
    assign dst_valid_o = src_valid_i;
    assign src_ready_o = dst_ready_i;
    assign dst_data_o  = src_data_i;
  // Generate the spill register
  end else begin : gen_isochronous_spill_register
    /// Read/write pointer are one bit wider than necessary.
    /// We implicitly capture the full and empty state with the second bit:
    /// If all but the topmost bit of `rd_pointer_q` and `wr_pointer_q` agree, the
    /// FIFO is in a critical state. If the topmost bit is equal, the FIFO is
    /// empty, otherwise it is full.
    logic [1:0] rd_pointer_q, wr_pointer_q;
    // Advance write pointer if we pushed a new item into the FIFO. (Source clock domain)
    `FFLARN(wr_pointer_q, wr_pointer_q+1, (src_valid_i && src_ready_o), '0, src_clk_i, src_rst_ni)
    // Advance read pointer if downstream consumed an item. (Destination clock domain)
    `FFLARN(rd_pointer_q, rd_pointer_q+1, (dst_valid_o && dst_ready_i), '0, dst_clk_i, dst_rst_ni)

    T [1:0] mem_d, mem_q;
    `FFLNR(mem_q, mem_d, (src_valid_i && src_ready_o), src_clk_i)
    always_comb begin
      mem_d = mem_q;
      mem_d[wr_pointer_q[0]] = src_data_i;
    end

    assign src_ready_o = (rd_pointer_q ^ wr_pointer_q) != 2'b10;

    assign dst_valid_o = (rd_pointer_q ^ wr_pointer_q) != '0;
    assign dst_data_o = mem_q[rd_pointer_q[0]];
  end

  // pragma translate_off
  // stability guarantees
  `ifndef VERILATOR
  assert property (@(posedge src_clk_i) disable iff (src_rst_ni)
    (src_valid_i && !src_ready_o |=> $stable(src_valid_i))) else $error("src_valid_i is unstable");
  assert property (@(posedge src_clk_i) disable iff (src_rst_ni)
    (src_valid_i && !src_ready_o |=> $stable(src_data_i))) else $error("src_data_i is unstable");
  assert property (@(posedge dst_clk_i) disable iff (dst_rst_ni)
    (dst_valid_o && !dst_ready_i |=> $stable(dst_valid_o))) else $error("dst_valid_o is unstable");
  assert property (@(posedge dst_clk_i) disable iff (dst_rst_ni)
    (dst_valid_o && !dst_ready_i |=> $stable(dst_data_o))) else $error("dst_data_o is unstable");
  `endif
  // pragma translate_on
endmodule

----

(source_file
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (include_compiler_directive
    (quoted_string
      (quoted_string_item)))
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier)
      (parameter_port_list
        (one_line_comment)
        (parameter_port_declaration
          (parameter_declaration
            (type_parameter_declaration
              (list_of_type_assignments
                (type_assignment
                  name: (simple_identifier)
                  value: (data_type
                    (integer_vector_type)))))))
        (one_line_comment)
        (parameter_port_declaration
          (parameter_declaration
            (data_type_or_implicit
              (data_type
                (integer_vector_type)))
            (list_of_param_assignments
              (param_assignment
                (simple_identifier)
                (constant_param_expression
                  (constant_mintypmax_expression
                    (constant_expression
                      (constant_primary
                        (primary_literal
                          (integral_number
                            (binary_number
                              size: (unsigned_number)
                              base: (binary_base)
                              value: (binary_value)))))))))))))
      (list_of_port_declarations
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (simple_identifier))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (simple_identifier))))
          port_name: (simple_identifier))))
    (one_line_comment)
    (conditional_generate_construct
      (if_generate_construct
        (constant_expression
          (constant_primary
            (simple_identifier)))
        (generate_block
          name: (simple_identifier)
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (simple_identifier))
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier)))))))
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (simple_identifier))
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier)))))))
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (simple_identifier))
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier)))))))
          (one_line_comment))
        (generate_block
          name: (simple_identifier)
          (one_line_comment)
          (one_line_comment)
          (one_line_comment)
          (one_line_comment)
          (one_line_comment)
          (data_declaration
            (data_type_or_implicit
              (data_type
                (integer_vector_type)
                (packed_dimension
                  (constant_range
                    (constant_expression
                      (constant_primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number))))))
                    (constant_expression
                      (constant_primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number))))))))))
            (list_of_variable_decl_assignments
              (variable_decl_assignment
                name: (simple_identifier))
              (variable_decl_assignment
                name: (simple_identifier))))
          (one_line_comment)
          (text_macro_usage
            (simple_identifier)
            (list_of_actual_arguments
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      left: (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier))))
                      right: (expression
                        (primary
                          (primary_literal
                            (integral_number
                              (decimal_number
                                (unsigned_number))))))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (mintypmax_expression
                          (expression
                            left: (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))
                            right: (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier)))))))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (primary_literal
                          (unbased_unsized_literal)))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))))
          (one_line_comment)
          (text_macro_usage
            (simple_identifier)
            (list_of_actual_arguments
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      left: (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier))))
                      right: (expression
                        (primary
                          (primary_literal
                            (integral_number
                              (decimal_number
                                (unsigned_number))))))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (mintypmax_expression
                          (expression
                            left: (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))
                            right: (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier)))))))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (primary_literal
                          (unbased_unsized_literal)))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))))
          (data_declaration
            (data_type_or_implicit
              (data_type
                (simple_identifier)
                (packed_dimension
                  (constant_range
                    (constant_expression
                      (constant_primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number))))))
                    (constant_expression
                      (constant_primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number))))))))))
            (list_of_variable_decl_assignments
              (variable_decl_assignment
                name: (simple_identifier))
              (variable_decl_assignment
                name: (simple_identifier))))
          (text_macro_usage
            (simple_identifier)
            (list_of_actual_arguments
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (mintypmax_expression
                          (expression
                            left: (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))
                            right: (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier)))))))))))
              (actual_argument
                (param_expression
                  (mintypmax_expression
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))))
          (always_construct
            (always_keyword)
            (statement
              (statement_item
                (seq_block
                  (statement_or_null
                    (statement
                      (statement_item
                        (blocking_assignment
                          (operator_assignment
                            (variable_lvalue
                              (hierarchical_identifier
                                (simple_identifier)))
                            (assignment_operator)
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier)))))))))
                  (statement_or_null
                    (statement
                      (statement_item
                        (blocking_assignment
                          (operator_assignment
                            (variable_lvalue
                              (hierarchical_identifier
                                (simple_identifier))
                              (select
                                (bit_select
                                  (expression
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier))
                                      (select
                                        (bit_select
                                          (expression
                                            (primary
                                              (primary_literal
                                                (integral_number
                                                  (decimal_number
                                                    (unsigned_number)))))))))))))
                            (assignment_operator)
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier)))))))))))))
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (simple_identifier))
                (expression
                  left: (expression
                    (primary
                      (mintypmax_expression
                        (expression
                          left: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          right: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))))))
                  right: (expression
                    (primary
                      (primary_literal
                        (integral_number
                          (binary_number
                            size: (unsigned_number)
                            base: (binary_base)
                            value: (binary_value))))))))))
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (simple_identifier))
                (expression
                  left: (expression
                    (primary
                      (mintypmax_expression
                        (expression
                          left: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          right: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))))))
                  right: (expression
                    (primary
                      (primary_literal
                        (unbased_unsized_literal))))))))
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (simple_identifier))
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))
                    (select
                      (bit_select
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))
                            (select
                              (bit_select
                                (expression
                                  (primary
                                    (primary_literal
                                      (integral_number
                                        (decimal_number
                                          (unsigned_number))))))))))))))))))))
    (one_line_comment)
    (one_line_comment)
    (conditional_compilation_directive
      (ifdef_condition
        (simple_identifier)))
    (concurrent_assertion_item
      (assert_property_statement
        (property_spec
          (clocking_event
            (event_expression
              (edge_identifier)
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier))))))
          (expression_or_dist
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (property_expr
            (property_expr
              (sequence_expr
                (expression_or_dist
                  (expression
                    left: (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))
                    right: (expression
                      operator: (unary_operator)
                      argument: (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (property_expr
                (sequence_expr
                  (expression_or_dist
                    (expression
                      (primary
                        (function_subroutine_call
                          (subroutine_call
                            (system_tf_call
                              (system_tf_identifier)
                              (list_of_arguments
                                (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))))))))))))))))
        (action_block
          (statement_or_null
            (statement
              (statement_item
                (subroutine_call_statement
                  (severity_system_task
                    (list_of_arguments
                      (expression
                        (primary
                          (primary_literal
                            (string_literal
                              (quoted_string
                                (quoted_string_item)))))))))))))))
    (concurrent_assertion_item
      (assert_property_statement
        (property_spec
          (clocking_event
            (event_expression
              (edge_identifier)
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier))))))
          (expression_or_dist
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (property_expr
            (property_expr
              (sequence_expr
                (expression_or_dist
                  (expression
                    left: (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))
                    right: (expression
                      operator: (unary_operator)
                      argument: (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (property_expr
                (sequence_expr
                  (expression_or_dist
                    (expression
                      (primary
                        (function_subroutine_call
                          (subroutine_call
                            (system_tf_call
                              (system_tf_identifier)
                              (list_of_arguments
                                (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))))))))))))))))
        (action_block
          (statement_or_null
            (statement
              (statement_item
                (subroutine_call_statement
                  (severity_system_task
                    (list_of_arguments
                      (expression
                        (primary
                          (primary_literal
                            (string_literal
                              (quoted_string
                                (quoted_string_item)))))))))))))))
    (concurrent_assertion_item
      (assert_property_statement
        (property_spec
          (clocking_event
            (event_expression
              (edge_identifier)
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier))))))
          (expression_or_dist
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (property_expr
            (property_expr
              (sequence_expr
                (expression_or_dist
                  (expression
                    left: (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))
                    right: (expression
                      operator: (unary_operator)
                      argument: (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (property_expr
                (sequence_expr
                  (expression_or_dist
                    (expression
                      (primary
                        (function_subroutine_call
                          (subroutine_call
                            (system_tf_call
                              (system_tf_identifier)
                              (list_of_arguments
                                (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))))))))))))))))
        (action_block
          (statement_or_null
            (statement
              (statement_item
                (subroutine_call_statement
                  (severity_system_task
                    (list_of_arguments
                      (expression
                        (primary
                          (primary_literal
                            (string_literal
                              (quoted_string
                                (quoted_string_item)))))))))))))))
    (concurrent_assertion_item
      (assert_property_statement
        (property_spec
          (clocking_event
            (event_expression
              (edge_identifier)
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier))))))
          (expression_or_dist
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (property_expr
            (property_expr
              (sequence_expr
                (expression_or_dist
                  (expression
                    left: (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))
                    right: (expression
                      operator: (unary_operator)
                      argument: (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (property_expr
                (sequence_expr
                  (expression_or_dist
                    (expression
                      (primary
                        (function_subroutine_call
                          (subroutine_call
                            (system_tf_call
                              (system_tf_identifier)
                              (list_of_arguments
                                (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))))))))))))))))
        (action_block
          (statement_or_null
            (statement
              (statement_item
                (subroutine_call_statement
                  (severity_system_task
                    (list_of_arguments
                      (expression
                        (primary
                          (primary_literal
                            (string_literal
                              (quoted_string
                                (quoted_string_item)))))))))))))))
    (conditional_compilation_directive)
    (one_line_comment)))
