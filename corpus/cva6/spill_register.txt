============================================
cva6/spill_register
============================================

// Copyright 2018 ETH Zurich and University of Bologna.
//
// Copyright and related rights are licensed under the Solderpad Hardware
// License, Version 0.51 (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of the License at
// http://solderpad.org/licenses/SHL-0.51. Unless required by applicable law
// or agreed to in writing, software, hardware and materials distributed under
// this License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//
// Fabian Schuiki <fschuiki@iis.ee.ethz.ch>


/// Wrapper around the flushable spill register to maintain back-ward
/// compatibility.
module spill_register #(
  parameter type T      = logic,
  parameter bit  Bypass = 1'b0     // make this spill register transparent
) (
  input  logic clk_i   ,
  input  logic rst_ni  ,
  input  logic valid_i ,
  output logic ready_o ,
  input  T     data_i  ,
  output logic valid_o ,
  input  logic ready_i ,
  output T     data_o
);

  spill_register_flushable #(
    .T(T),
    .Bypass(Bypass)
  ) spill_register_flushable_i (
    .clk_i,
    .rst_ni,
    .valid_i,
    .flush_i(1'b0),
    .ready_o,
    .data_i,
    .valid_o,
    .ready_i,
    .data_o
  );

endmodule

----

(source_file
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier)
      (parameter_port_list
        (parameter_port_declaration
          (parameter_declaration
            (type_parameter_declaration
              (list_of_type_assignments
                (type_assignment
                  name: (simple_identifier)
                  value: (data_type
                    (integer_vector_type)))))))
        (parameter_port_declaration
          (parameter_declaration
            (data_type_or_implicit
              (data_type
                (integer_vector_type)))
            (list_of_param_assignments
              (param_assignment
                (simple_identifier)
                (constant_param_expression
                  (constant_mintypmax_expression
                    (constant_expression
                      (constant_primary
                        (primary_literal
                          (integral_number
                            (binary_number
                              size: (unsigned_number)
                              base: (binary_base)
                              value: (binary_value))))))))))))
        (one_line_comment))
      (list_of_port_declarations
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (simple_identifier))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (simple_identifier))))
          port_name: (simple_identifier))))
    (module_instantiation
      instance_type: (simple_identifier)
      (parameter_value_assignment
        (list_of_parameter_value_assignments
          (named_parameter_assignment
            (simple_identifier)
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier)))))))
          (named_parameter_assignment
            (simple_identifier)
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier)))))))))
      (hierarchical_instance
        (name_of_instance
          instance_name: (simple_identifier))
        (list_of_port_connections
          (named_port_connection
            port_name: (simple_identifier))
          (named_port_connection
            port_name: (simple_identifier))
          (named_port_connection
            port_name: (simple_identifier))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (primary_literal
                  (integral_number
                    (binary_number
                      size: (unsigned_number)
                      base: (binary_base)
                      value: (binary_value)))))))
          (named_port_connection
            port_name: (simple_identifier))
          (named_port_connection
            port_name: (simple_identifier))
          (named_port_connection
            port_name: (simple_identifier))
          (named_port_connection
            port_name: (simple_identifier))
          (named_port_connection
            port_name: (simple_identifier)))))))
