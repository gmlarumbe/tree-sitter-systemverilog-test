============================================
cva6/string_buffer
============================================

// Copyright 2018 ETH Zurich and University of Bologna.
// Copyright and related rights are licensed under the Solderpad Hardware
// License, Version 0.51 (the "License"); you may not use this file except in
// compliance with the License.  You may obtain a copy of the License at
// http://solderpad.org/licenses/SHL-0.51. Unless required by applicable law
// or agreed to in writing, software, hardware and materials distributed under
// this License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//
// Author: Florian Zaruba, ETH Zurich
// Date: 13.07.2017
// Description: Buffers a string until a new line appears.

class string_buffer extends uvm_component;

    /*-------------------------------------------------------------------------------
    -- Interface, port, fields
    -------------------------------------------------------------------------------*/
    // string buffer
    byte buffer [$];
    // name to display in console
    string logger_name;
    /*-------------------------------------------------------------------------------
    -- UVM Factory register
    -------------------------------------------------------------------------------*/
        // Provide implementations of virtual methods such as get_type_name and create
        `uvm_component_utils(string_buffer)

    /*-------------------------------------------------------------------------------
    -- Functions
    -------------------------------------------------------------------------------*/
        // Constructor
        function new(string name = "string_buffer", uvm_component parent=null);
            super.new(name, parent);
            // default logger name
            logger_name = "String Buffer";
        endfunction : new

        function void set_logger(string logger_name);
            this.logger_name = logger_name;
        endfunction : set_logger

        function void flush();
            string s;
            // dump the buffer out the whole buffer
            foreach (buffer[i]) begin
                s = $sformatf("%s%c",s, buffer[i]);
            end

            uvm_report_info(logger_name, s, UVM_LOW);

            // clear buffer afterwards
            buffer = {};
        endfunction : flush

        // put a char to the buffer
        function void append(byte ch);

            // wait for the new line
            if (ch == 8'hA)
                this.flush();
            else
                buffer.push_back(ch);

        endfunction : append
endclass : string_buffer

----

(source_file
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (class_declaration
    name: (simple_identifier)
    (class_type
      (simple_identifier))
    (block_comment)
    (one_line_comment)
    (class_item
      (class_property
        (data_declaration
          (data_type_or_implicit
            (data_type
              (integer_atom_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              name: (simple_identifier)
              (queue_dimension))))))
    (one_line_comment)
    (class_item
      (class_property
        (data_declaration
          (data_type_or_implicit
            (data_type))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              name: (simple_identifier))))))
    (block_comment)
    (one_line_comment)
    (class_item
      (text_macro_usage
        (simple_identifier)
        (list_of_actual_arguments
          (actual_argument
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))))))))))
    (block_comment)
    (one_line_comment)
    (class_item
      (class_method
        (class_constructor_declaration
          (class_constructor_arg_list
            (class_constructor_arg
              (tf_port_item
                (data_type_or_implicit
                  (data_type))
                name: (simple_identifier)
                (expression
                  (primary
                    (primary_literal
                      (string_literal
                        (quoted_string
                          (quoted_string_item))))))))
            (class_constructor_arg
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                name: (simple_identifier)
                (expression
                  (primary)))))
          (list_of_arguments
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (one_line_comment)
          (function_statement_or_null
            (function_statement
              (statement
                (statement_item
                  (blocking_assignment
                    (operator_assignment
                      (variable_lvalue
                        (hierarchical_identifier
                          (simple_identifier)))
                      (assignment_operator)
                      (expression
                        (primary
                          (primary_literal
                            (string_literal
                              (quoted_string
                                (quoted_string_item)))))))))))))))
    (class_item
      (class_method
        (function_declaration
          (function_body_declaration
            (data_type_or_void)
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (data_type_or_implicit
                  (data_type))
                name: (simple_identifier)))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (blocking_assignment
                      (operator_assignment
                        (variable_lvalue
                          (implicit_class_handle)
                          (hierarchical_identifier
                            (simple_identifier)))
                        (assignment_operator)
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))))))))
            (simple_identifier)))))
    (class_item
      (class_method
        (function_declaration
          (function_body_declaration
            (data_type_or_void)
            name: (simple_identifier)
            (block_item_declaration
              (data_declaration
                (data_type_or_implicit
                  (data_type))
                (list_of_variable_decl_assignments
                  (variable_decl_assignment
                    name: (simple_identifier)))))
            (one_line_comment)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (loop_statement
                      (hierarchical_identifier
                        (simple_identifier))
                      (loop_variables
                        (simple_identifier))
                      (statement
                        (statement_item
                          (seq_block
                            (statement_or_null
                              (statement
                                (statement_item
                                  (blocking_assignment
                                    (operator_assignment
                                      (variable_lvalue
                                        (hierarchical_identifier
                                          (simple_identifier)))
                                      (assignment_operator)
                                      (expression
                                        (primary
                                          (function_subroutine_call
                                            (subroutine_call
                                              (system_tf_call
                                                (system_tf_identifier)
                                                (list_of_arguments
                                                  (expression
                                                    (primary
                                                      (primary_literal
                                                        (string_literal
                                                          (quoted_string
                                                            (quoted_string_item))))))
                                                  (expression
                                                    (primary
                                                      (hierarchical_identifier
                                                        (simple_identifier))))
                                                  (expression
                                                    (primary
                                                      (hierarchical_identifier
                                                        (simple_identifier))
                                                      (select
                                                        (bit_select
                                                          (expression
                                                            (primary
                                                              (hierarchical_identifier
                                                                (simple_identifier)))))))))))))))))))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (subroutine_call_statement
                      (subroutine_call
                        (tf_call
                          (hierarchical_identifier
                            (simple_identifier))
                          (list_of_arguments
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))))))))))
            (one_line_comment)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (blocking_assignment
                      (operator_assignment
                        (variable_lvalue
                          (hierarchical_identifier
                            (simple_identifier)))
                        (assignment_operator)
                        (expression
                          (primary
                            (empty_unpacked_array_concatenation)))))))))
            (simple_identifier)))))
    (one_line_comment)
    (class_item
      (class_method
        (function_declaration
          (function_body_declaration
            (data_type_or_void)
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (integer_atom_type)))
                name: (simple_identifier)))
            (one_line_comment)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          left: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          right: (expression
                            (primary
                              (primary_literal
                                (integral_number
                                  (hex_number
                                    size: (unsigned_number)
                                    base: (hex_base)
                                    value: (hex_value))))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (subroutine_call_statement
                              (subroutine_call
                                (method_call
                                  (implicit_class_handle)
                                  (method_call_body
                                    name: (simple_identifier))))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (subroutine_call_statement
                              (subroutine_call
                                (method_call
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier)))
                                  (method_call_body
                                    (queue_method_call
                                      (queue_method_name)
                                      (list_of_arguments
                                        (expression
                                          (primary
                                            (hierarchical_identifier
                                              (simple_identifier))))))))))))))))))
            (simple_identifier)))))
    (simple_identifier)))
