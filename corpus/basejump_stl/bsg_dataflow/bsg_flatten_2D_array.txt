============================================
basejump_stl/bsg_dataflow/bsg_flatten_2D_array
============================================

`include "bsg_defines.sv"

module bsg_flatten_2D_array #(parameter `BSG_INV_PARAM(  width_p )
                              , parameter `BSG_INV_PARAM(items_p ))
   (input [width_p-1:0]            i [items_p-1:0]
    , output [width_p*items_p-1:0] o
    );

   genvar j;

   for (j = 0; j < items_p; j=j+1)
     begin
        assign o[j*width_p+:width_p] = i[j];
     end

endmodule

`BSG_ABSTRACT_MODULE(bsg_flatten_2D_array)

----

(source_file
  (include_compiler_directive
    (quoted_string
      (quoted_string_item)))
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier)
      (parameter_port_list
        (parameter_port_declaration
          (parameter_declaration
            (list_of_param_assignments
              (param_assignment
                (text_macro_usage
                  (simple_identifier)
                  (list_of_actual_arguments
                    (actual_argument
                      (param_expression
                        (mintypmax_expression
                          (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier)))))))))))))
        (parameter_port_declaration
          (parameter_declaration
            (list_of_param_assignments
              (param_assignment
                (text_macro_usage
                  (simple_identifier)
                  (list_of_actual_arguments
                    (actual_argument
                      (param_expression
                        (mintypmax_expression
                          (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))))))))))))
      (list_of_port_declarations
        (ansi_port_declaration
          (net_port_header
            (port_direction)
            (net_port_type
              (data_type_or_implicit
                (implicit_data_type
                  (packed_dimension
                    (constant_range
                      (constant_expression
                        left: (constant_expression
                          (constant_primary
                            (simple_identifier)))
                        right: (constant_expression
                          (constant_primary
                            (primary_literal
                              (integral_number
                                (decimal_number
                                  (unsigned_number)))))))
                      (constant_expression
                        (constant_primary
                          (primary_literal
                            (integral_number
                              (decimal_number
                                (unsigned_number))))))))))))
          port_name: (simple_identifier)
          (unpacked_dimension
            (constant_range
              (constant_expression
                left: (constant_expression
                  (constant_primary
                    (simple_identifier)))
                right: (constant_expression
                  (constant_primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number)))))))
              (constant_expression
                (constant_primary
                  (primary_literal
                    (integral_number
                      (decimal_number
                        (unsigned_number)))))))))
        (ansi_port_declaration
          (net_port_header
            (port_direction)
            (net_port_type
              (data_type_or_implicit
                (implicit_data_type
                  (packed_dimension
                    (constant_range
                      (constant_expression
                        left: (constant_expression
                          left: (constant_expression
                            (constant_primary
                              (simple_identifier)))
                          right: (constant_expression
                            (constant_primary
                              (simple_identifier))))
                        right: (constant_expression
                          (constant_primary
                            (primary_literal
                              (integral_number
                                (decimal_number
                                  (unsigned_number)))))))
                      (constant_expression
                        (constant_primary
                          (primary_literal
                            (integral_number
                              (decimal_number
                                (unsigned_number))))))))))))
          port_name: (simple_identifier))))
    (genvar_declaration
      (list_of_genvar_identifiers
        (simple_identifier)))
    (loop_generate_construct
      (genvar_initialization
        (simple_identifier)
        (constant_expression
          (constant_primary
            (primary_literal
              (integral_number
                (decimal_number
                  (unsigned_number)))))))
      (constant_expression
        left: (constant_expression
          (constant_primary
            (simple_identifier)))
        right: (constant_expression
          (constant_primary
            (simple_identifier))))
      (genvar_iteration
        (simple_identifier)
        (assignment_operator)
        (constant_expression
          left: (constant_expression
            (constant_primary
              (simple_identifier)))
          right: (constant_expression
            (constant_primary
              (primary_literal
                (integral_number
                  (decimal_number
                    (unsigned_number))))))))
      (generate_block
        (continuous_assign
          (list_of_net_assignments
            (net_assignment
              (net_lvalue
                (simple_identifier)
                (constant_select
                  (constant_indexed_range
                    (constant_expression
                      left: (constant_expression
                        (constant_primary
                          (simple_identifier)))
                      right: (constant_expression
                        (constant_primary
                          (simple_identifier))))
                    (constant_expression
                      (constant_primary
                        (simple_identifier))))))
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier))
                  (select
                    (bit_select
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier))))))))))))))
  (text_macro_usage
    (simple_identifier)
    (list_of_actual_arguments
      (actual_argument
        (param_expression
          (mintypmax_expression
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))))))))
