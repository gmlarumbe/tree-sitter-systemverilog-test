============================================
basejump_stl/hard/generic/bsg_mem/bsg_mem_1r1w_sync_mask_write_bit_macros
============================================


`ifndef BSG_MEM_1R1W_SYNC_MASK_WRITE_BIT_MACROS_VH
`define BSG_MEM_1R1W_SYNC_MASK_WRITE_BIT_MACROS_VH

`define bsg_mem_1r1w_sync_mask_write_bit_2rf_macro(words,bits,tag) \
  `bsg_mem_1r1w_sync_mask_write_bit_macro(words,bits,tag)
`define bsg_mem_1r1w_sync_mask_write_bit_2sram_macro(words,bits,tag) \
  `bsg_mem_1r1w_sync_mask_write_bit_macro(words,bits,tag)
`define bsg_mem_1r1w_sync_mask_write_bit_2hdsram_macro(words,bits,tag) \
  `bsg_mem_1r1w_sync_mask_write_bit_macro(words,bits,tag)

`define bsg_mem_1r1w_sync_mask_write_bit_macro(words,bits,tag)\
  if (harden_p && els_p == words && width_p == bits)          \
    begin: macro                                              \
      bsg_mem_1r1w_sync_mask_write_bit_w``bits``_d``words``_``tag``_hard mem (.*); \
    end
      
`endif


----

(source_file
  (conditional_compilation_directive
    (ifdef_condition
      (simple_identifier)))
  (text_macro_definition
    (text_macro_name
      (simple_identifier)))
  (text_macro_definition
    (text_macro_name
      (simple_identifier)
      (list_of_formal_arguments
        (formal_argument
          (simple_identifier))
        (formal_argument
          (simple_identifier))
        (formal_argument
          (simple_identifier))))
    (macro_text))
  (text_macro_definition
    (text_macro_name
      (simple_identifier)
      (list_of_formal_arguments
        (formal_argument
          (simple_identifier))
        (formal_argument
          (simple_identifier))
        (formal_argument
          (simple_identifier))))
    (macro_text))
  (text_macro_definition
    (text_macro_name
      (simple_identifier)
      (list_of_formal_arguments
        (formal_argument
          (simple_identifier))
        (formal_argument
          (simple_identifier))
        (formal_argument
          (simple_identifier))))
    (macro_text))
  (text_macro_definition
    (text_macro_name
      (simple_identifier)
      (list_of_formal_arguments
        (formal_argument
          (simple_identifier))
        (formal_argument
          (simple_identifier))
        (formal_argument
          (simple_identifier))))
    (macro_text))
  (conditional_compilation_directive))
