============================================
basejump_stl/hard/tsmc_28/bsg_async/bsg_sync_sync_async_reset_unit
============================================


//
// Context: The tsmc28 PDK we used did not have a sync cell
//   to use explicitly, so we compose one ourselves and call
//   it a synchronization 'unit'.
//
// bsg_SYNC_1_r and bsg_SYNC_2_r should be placed abutted if possible
//   so that there is a small max path between them.
//
// In synopsys flows, rp_groups can be used and this file can be annotated.
// In cadence flows, SDP groups serve the same purpose, but are contained within
//   external files.
// We have also seen good results with magnet placement of these two cells
//
// Users should
//   set_false_path -to bsg_SYNC_1_r/D
//   to avoid false CDC violations. With high clock uncertainty, we've also
//   observed violating min paths between the flops. If the placement is
//   correct, then this uncertainty is pessimistic and can be waived with
//   set_false_path -hold -from bsg_SYNC_1_r/Q -to bsg_SYNC_1_r/D
//
module bsg_sync_sync_async_reset_unit
 (input oclk_i
  , input iclk_reset_i
  , input iclk_data_i
  , output oclk_data_o // after sync flops
  );

  logic bsg_SYNC_1_r, bsg_SYNC_2_r;

  DFCNQD4BWP7T30P140ULVT hard_sync_int1_BSG_SYNC
   (.CP(oclk_i)
   ,.CDN(~iclk_reset_i)
   ,.D(iclk_data_i)
   ,.Q(bsg_SYNC_1_r)
   );

  DFCNQD4BWP7T30P140ULVT hard_sync_int2_BSG_SYNC
   (.CP(oclk_i)
   ,.CDN(~iclk_reset_i)
   ,.D(bsg_SYNC_1_r)
   ,.Q(bsg_SYNC_2_r)
   );

  assign oclk_data_o = bsg_SYNC_2_r;

endmodule


----

(source_file
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_port_declarations
        (ansi_port_declaration
          (net_port_header
            (port_direction))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (net_port_header
            (port_direction))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (net_port_header
            (port_direction))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (net_port_header
            (port_direction))
          port_name: (simple_identifier))
        (one_line_comment)))
    (data_declaration
      (data_type_or_implicit
        (data_type
          (integer_vector_type)))
      (list_of_variable_decl_assignments
        (variable_decl_assignment
          name: (simple_identifier))
        (variable_decl_assignment
          name: (simple_identifier))))
    (module_instantiation
      instance_type: (simple_identifier)
      (hierarchical_instance
        (name_of_instance
          instance_name: (simple_identifier))
        (list_of_port_connections
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              operator: (unary_operator)
              argument: (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))))))
    (module_instantiation
      instance_type: (simple_identifier)
      (hierarchical_instance
        (name_of_instance
          instance_name: (simple_identifier))
        (list_of_port_connections
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              operator: (unary_operator)
              argument: (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (named_port_connection
            port_name: (simple_identifier)
            connection: (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))))))
    (continuous_assign
      (list_of_net_assignments
        (net_assignment
          (net_lvalue
            (simple_identifier))
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier)))))))))
