============================================
core/concat/concat_expr_3
============================================

module x;
    always begin
        lhs <= {(a[N-1:0] - b[N-1:0]), 1'b0};
    end
endmodule

----

(source_file
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier))
    (always_construct
      (always_keyword)
      (statement
        (statement_item
          (seq_block
            (statement_or_null
              (statement
                (statement_item
                  (nonblocking_assignment
                    (variable_lvalue
                      (hierarchical_identifier
                        (simple_identifier)))
                    (expression
                      (primary
                        (concatenation
                          (expression
                            (primary
                              (mintypmax_expression
                                (expression
                                  left: (expression
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier))
                                      (select
                                        (constant_range
                                          (constant_expression
                                            left: (constant_expression
                                              (constant_primary
                                                (simple_identifier)))
                                            right: (constant_expression
                                              (constant_primary
                                                (primary_literal
                                                  (integral_number
                                                    (decimal_number
                                                      (unsigned_number)))))))
                                          (constant_expression
                                            (constant_primary
                                              (primary_literal
                                                (integral_number
                                                  (decimal_number
                                                    (unsigned_number))))))))))
                                  right: (expression
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier))
                                      (select
                                        (constant_range
                                          (constant_expression
                                            left: (constant_expression
                                              (constant_primary
                                                (simple_identifier)))
                                            right: (constant_expression
                                              (constant_primary
                                                (primary_literal
                                                  (integral_number
                                                    (decimal_number
                                                      (unsigned_number)))))))
                                          (constant_expression
                                            (constant_primary
                                              (primary_literal
                                                (integral_number
                                                  (decimal_number
                                                    (unsigned_number))))))))))))))
                          (expression
                            (primary
                              (primary_literal
                                (integral_number
                                  (binary_number
                                    size: (unsigned_number)
                                    base: (binary_base)
                                    value: (binary_value)))))))))))))))))))
