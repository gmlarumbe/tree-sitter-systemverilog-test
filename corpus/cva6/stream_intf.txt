============================================
cva6/stream_intf
============================================

// Copyright 2020 ETH Zurich and University of Bologna.
//
// Copyright and related rights are licensed under the Solderpad Hardware
// License, Version 0.51 (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of the License at
// http://solderpad.org/licenses/SHL-0.51. Unless required by applicable law
// or agreed to in writing, software, hardware and materials distributed under
// this License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

// Author: Florian Zaruba <zarubaf@iis.ee.ethz.ch>

/// A stream interface with custom payload of type `payload_t`.
/// Handshaking rules as defined in the AXI standard.
interface STREAM_DV #(
  /// Custom payload type.
  parameter type payload_t = logic
)(
  /// Interface clock.
  input logic clk_i
);
  payload_t data;
  logic valid;
  logic ready;

  modport In (
    output ready,
    input valid, data
  );

  modport Out (
    output valid, data,
    input ready
  );

  /// Passive modport for scoreboard and monitors.
  modport Passive (
    input valid, ready, data
  );

  // Make sure that the handshake and payload is stable
  // pragma translate_off
  `ifndef VERILATOR
  assert property (@(posedge clk_i) (valid && !ready |=> $stable(data)));
  assert property (@(posedge clk_i) (valid && !ready |=> valid));
  `endif
  // pragma translate_on
endinterface

----

(source_file
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (interface_declaration
    (interface_ansi_header
      name: (simple_identifier)
      (parameter_port_list
        (one_line_comment)
        (parameter_port_declaration
          (parameter_declaration
            (type_parameter_declaration
              (list_of_type_assignments
                (type_assignment
                  name: (simple_identifier)
                  value: (data_type
                    (integer_vector_type))))))))
      (list_of_port_declarations
        (one_line_comment)
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))))
    (data_declaration
      (data_type_or_implicit
        (data_type
          (simple_identifier)))
      (list_of_variable_decl_assignments
        (variable_decl_assignment
          name: (simple_identifier))))
    (data_declaration
      (data_type_or_implicit
        (data_type
          (integer_vector_type)))
      (list_of_variable_decl_assignments
        (variable_decl_assignment
          name: (simple_identifier))))
    (data_declaration
      (data_type_or_implicit
        (data_type
          (integer_vector_type)))
      (list_of_variable_decl_assignments
        (variable_decl_assignment
          name: (simple_identifier))))
    (modport_declaration
      (modport_item
        (simple_identifier)
        (modport_ports_declaration
          (modport_simple_ports_declaration
            (port_direction)
            (modport_simple_port
              (simple_identifier))))
        (modport_ports_declaration
          (modport_simple_ports_declaration
            (port_direction)
            (modport_simple_port
              (simple_identifier))
            (modport_simple_port
              (simple_identifier))))))
    (modport_declaration
      (modport_item
        (simple_identifier)
        (modport_ports_declaration
          (modport_simple_ports_declaration
            (port_direction)
            (modport_simple_port
              (simple_identifier))
            (modport_simple_port
              (simple_identifier))))
        (modport_ports_declaration
          (modport_simple_ports_declaration
            (port_direction)
            (modport_simple_port
              (simple_identifier))))))
    (one_line_comment)
    (modport_declaration
      (modport_item
        (simple_identifier)
        (modport_ports_declaration
          (modport_simple_ports_declaration
            (port_direction)
            (modport_simple_port
              (simple_identifier))
            (modport_simple_port
              (simple_identifier))
            (modport_simple_port
              (simple_identifier))))))
    (one_line_comment)
    (one_line_comment)
    (conditional_compilation_directive
      (ifdef_condition
        (simple_identifier)))
    (concurrent_assertion_item
      (assert_property_statement
        (property_spec
          (clocking_event
            (event_expression
              (edge_identifier)
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier))))))
          (property_expr
            (property_expr
              (sequence_expr
                (expression_or_dist
                  (expression
                    left: (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))
                    right: (expression
                      operator: (unary_operator)
                      argument: (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (property_expr
                (sequence_expr
                  (expression_or_dist
                    (expression
                      (primary
                        (function_subroutine_call
                          (subroutine_call
                            (system_tf_call
                              (system_tf_identifier)
                              (list_of_arguments
                                (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))))))))))))))))
        (action_block
          (statement_or_null))))
    (concurrent_assertion_item
      (assert_property_statement
        (property_spec
          (clocking_event
            (event_expression
              (edge_identifier)
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier))))))
          (property_expr
            (property_expr
              (sequence_expr
                (expression_or_dist
                  (expression
                    left: (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))
                    right: (expression
                      operator: (unary_operator)
                      argument: (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (property_expr
                (sequence_expr
                  (expression_or_dist
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))))))))
        (action_block
          (statement_or_null))))
    (conditional_compilation_directive)
    (one_line_comment)))
