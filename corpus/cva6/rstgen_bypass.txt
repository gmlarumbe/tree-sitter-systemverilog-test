============================================
cva6/rstgen_bypass
============================================

// Copyright 2018 ETH Zurich and University of Bologna.
// Copyright and related rights are licensed under the Solderpad Hardware
// License, Version 0.51 (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of the License at
// http://solderpad.org/licenses/SHL-0.51. Unless required by applicable law
// or agreed to in writing, software, hardware and materials distributed under
// this License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

// Florian Zaruba <zarubaf@iis.ee.ethz.ch>
// Description: This module is a reset synchronizer with a dedicated reset bypass pin for testmode reset.
// Pro Tip: The wise Dr. Schaffner recommends at least 4 registers!

module rstgen_bypass #(
    parameter int unsigned NumRegs = 4
) (
    input  logic clk_i,
    input  logic rst_ni,
    input  logic rst_test_mode_ni,
    input  logic test_mode_i,
    output logic rst_no,
    output logic init_no
);

    // internal reset
    logic rst_n;

    logic [NumRegs-1:0] synch_regs_q;
    // bypass mode
    always_comb begin
        if (test_mode_i == 1'b0) begin
            rst_n   = rst_ni;
            rst_no  = synch_regs_q[NumRegs-1];
            init_no = synch_regs_q[NumRegs-1];
        end else begin
            rst_n   = rst_test_mode_ni;
            rst_no  = rst_test_mode_ni;
            init_no = 1'b1;
        end
    end

    always @(posedge clk_i or negedge rst_n) begin
        if (~rst_n) begin
            synch_regs_q <= 0;
        end else begin
            synch_regs_q <= {synch_regs_q[NumRegs-2:0], 1'b1};
        end
    end
    // pragma translate_off
    `ifndef VERILATOR
    initial begin : p_assertions
        if (NumRegs < 1) $fatal(1, "At least one register is required.");
    end
    `endif
    // pragma translate_on
endmodule

----

(source_file
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (one_line_comment)
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier)
      (parameter_port_list
        (parameter_port_declaration
          (parameter_declaration
            (data_type_or_implicit
              (data_type
                (integer_atom_type)))
            (list_of_param_assignments
              (param_assignment
                (simple_identifier)
                (constant_param_expression
                  (constant_mintypmax_expression
                    (constant_expression
                      (constant_primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number)))))))))))))
      (list_of_port_declarations
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (variable_port_type
              (data_type
                (integer_vector_type))))
          port_name: (simple_identifier))))
    (one_line_comment)
    (data_declaration
      (data_type_or_implicit
        (data_type
          (integer_vector_type)))
      (list_of_variable_decl_assignments
        (variable_decl_assignment
          name: (simple_identifier))))
    (data_declaration
      (data_type_or_implicit
        (data_type
          (integer_vector_type)
          (packed_dimension
            (constant_range
              (constant_expression
                left: (constant_expression
                  (constant_primary
                    (simple_identifier)))
                right: (constant_expression
                  (constant_primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number)))))))
              (constant_expression
                (constant_primary
                  (primary_literal
                    (integral_number
                      (decimal_number
                        (unsigned_number))))))))))
      (list_of_variable_decl_assignments
        (variable_decl_assignment
          name: (simple_identifier))))
    (one_line_comment)
    (always_construct
      (always_keyword)
      (statement
        (statement_item
          (seq_block
            (statement_or_null
              (statement
                (statement_item
                  (conditional_statement
                    (cond_predicate
                      (expression
                        left: (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))
                        right: (expression
                          (primary
                            (primary_literal
                              (integral_number
                                (binary_number
                                  size: (unsigned_number)
                                  base: (binary_base)
                                  value: (binary_value))))))))
                    (statement_or_null
                      (statement
                        (statement_item
                          (seq_block
                            (statement_or_null
                              (statement
                                (statement_item
                                  (blocking_assignment
                                    (operator_assignment
                                      (variable_lvalue
                                        (hierarchical_identifier
                                          (simple_identifier)))
                                      (assignment_operator)
                                      (expression
                                        (primary
                                          (hierarchical_identifier
                                            (simple_identifier)))))))))
                            (statement_or_null
                              (statement
                                (statement_item
                                  (blocking_assignment
                                    (operator_assignment
                                      (variable_lvalue
                                        (hierarchical_identifier
                                          (simple_identifier)))
                                      (assignment_operator)
                                      (expression
                                        (primary
                                          (hierarchical_identifier
                                            (simple_identifier))
                                          (select
                                            (bit_select
                                              (expression
                                                left: (expression
                                                  (primary
                                                    (hierarchical_identifier
                                                      (simple_identifier))))
                                                right: (expression
                                                  (primary
                                                    (primary_literal
                                                      (integral_number
                                                        (decimal_number
                                                          (unsigned_number))))))))))))))))
                            (statement_or_null
                              (statement
                                (statement_item
                                  (blocking_assignment
                                    (operator_assignment
                                      (variable_lvalue
                                        (hierarchical_identifier
                                          (simple_identifier)))
                                      (assignment_operator)
                                      (expression
                                        (primary
                                          (hierarchical_identifier
                                            (simple_identifier))
                                          (select
                                            (bit_select
                                              (expression
                                                left: (expression
                                                  (primary
                                                    (hierarchical_identifier
                                                      (simple_identifier))))
                                                right: (expression
                                                  (primary
                                                    (primary_literal
                                                      (integral_number
                                                        (decimal_number
                                                          (unsigned_number))))))))))))))))))))
                    (statement_or_null
                      (statement
                        (statement_item
                          (seq_block
                            (statement_or_null
                              (statement
                                (statement_item
                                  (blocking_assignment
                                    (operator_assignment
                                      (variable_lvalue
                                        (hierarchical_identifier
                                          (simple_identifier)))
                                      (assignment_operator)
                                      (expression
                                        (primary
                                          (hierarchical_identifier
                                            (simple_identifier)))))))))
                            (statement_or_null
                              (statement
                                (statement_item
                                  (blocking_assignment
                                    (operator_assignment
                                      (variable_lvalue
                                        (hierarchical_identifier
                                          (simple_identifier)))
                                      (assignment_operator)
                                      (expression
                                        (primary
                                          (hierarchical_identifier
                                            (simple_identifier)))))))))
                            (statement_or_null
                              (statement
                                (statement_item
                                  (blocking_assignment
                                    (operator_assignment
                                      (variable_lvalue
                                        (hierarchical_identifier
                                          (simple_identifier)))
                                      (assignment_operator)
                                      (expression
                                        (primary
                                          (primary_literal
                                            (integral_number
                                              (binary_number
                                                size: (unsigned_number)
                                                base: (binary_base)
                                                value: (binary_value)))))))))))))))))))))))
    (always_construct
      (always_keyword)
      (statement
        (statement_item
          (procedural_timing_control_statement
            (event_control
              (clocking_event
                (event_expression
                  (event_expression
                    (edge_identifier)
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))
                  (event_expression
                    (edge_identifier)
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))))))
            (statement_or_null
              (statement
                (statement_item
                  (seq_block
                    (statement_or_null
                      (statement
                        (statement_item
                          (conditional_statement
                            (cond_predicate
                              (expression
                                operator: (unary_operator)
                                argument: (primary
                                  (hierarchical_identifier
                                    (simple_identifier)))))
                            (statement_or_null
                              (statement
                                (statement_item
                                  (seq_block
                                    (statement_or_null
                                      (statement
                                        (statement_item
                                          (nonblocking_assignment
                                            (variable_lvalue
                                              (hierarchical_identifier
                                                (simple_identifier)))
                                            (expression
                                              (primary
                                                (primary_literal
                                                  (integral_number
                                                    (decimal_number
                                                      (unsigned_number))))))))))))))
                            (statement_or_null
                              (statement
                                (statement_item
                                  (seq_block
                                    (statement_or_null
                                      (statement
                                        (statement_item
                                          (nonblocking_assignment
                                            (variable_lvalue
                                              (hierarchical_identifier
                                                (simple_identifier)))
                                            (expression
                                              (primary
                                                (concatenation
                                                  (expression
                                                    (primary
                                                      (hierarchical_identifier
                                                        (simple_identifier))
                                                      (select
                                                        (constant_range
                                                          (constant_expression
                                                            left: (constant_expression
                                                              (constant_primary
                                                                (simple_identifier)))
                                                            right: (constant_expression
                                                              (constant_primary
                                                                (primary_literal
                                                                  (integral_number
                                                                    (decimal_number
                                                                      (unsigned_number)))))))
                                                          (constant_expression
                                                            (constant_primary
                                                              (primary_literal
                                                                (integral_number
                                                                  (decimal_number
                                                                    (unsigned_number))))))))))
                                                  (expression
                                                    (primary
                                                      (primary_literal
                                                        (integral_number
                                                          (binary_number
                                                            size: (unsigned_number)
                                                            base: (binary_base)
                                                            value: (binary_value)))))))))))))))))))))))))))))
    (one_line_comment)
    (conditional_compilation_directive
      (ifdef_condition
        (simple_identifier)))
    (initial_construct
      (statement_or_null
        (statement
          (statement_item
            (seq_block
              (simple_identifier)
              (statement_or_null
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          left: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          right: (expression
                            (primary
                              (primary_literal
                                (integral_number
                                  (decimal_number
                                    (unsigned_number))))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (subroutine_call_statement
                              (severity_system_task
                                (finish_number)
                                (list_of_arguments
                                  (expression
                                    (primary
                                      (primary_literal
                                        (string_literal
                                          (quoted_string
                                            (quoted_string_item)))))))))))))))))))))
    (conditional_compilation_directive)
    (one_line_comment)))
